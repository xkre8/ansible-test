---
- name: Parse filesystem configuration
  ansible.builtin.set_fact:
    parsed_filesystems: "{{ filesystem_config | from_yaml }}"
  when: filesystem_config is defined

- name: Initialize filesystem_dirs as empty list
  ansible.builtin.set_fact:
    filesystem_dirs: []

- name: Build complete filesystem configuration
  ansible.builtin.set_fact:
    filesystem_dirs: "{{ filesystem_dirs + [item] }}"
  vars:
    item:
      path: "{{ fs.path }}"
      lv_name: "{{ fs.lv_name }}"
      owner: "{{ fs.owner | default('root') }}"
      group: "{{ fs.group | default('root') }}"
      mode: "{{ fs.mode | default('0755') }}"
      create_lvm: "{{ fs.create_lvm | default(true) }}"
      size_mb: "{{ fs.size_mb }}"
      fstype: "{{ fs.fstype | default('xfs') }}"
      mount_opts: "{{ fs.mount_opts | default('defaults') }}"
  loop: "{{ parsed_filesystems }}"
  loop_control:
    loop_var: fs
  when: filesystem_config is defined

- name: Display selected VG strategy
  ansible.builtin.debug:
    msg: |
      ðŸŽ¯ Volume Group Strategy: {{ vg_strategy | default('create_new') }}
      ðŸ“¦ Volume Group Name: {{ volume_group_name }}
      
      Strategy Details:
      {% if vg_strategy == 'create_new' %}
      - Will create a brand new Volume Group
      - Requires a disk to be specified
      {% elif vg_strategy == 'use_existing' %}
      - Will use existing Volume Group
      - No disk required (will use existing space)
      {% elif vg_strategy == 'extend_existing' %}
      - Will extend existing Volume Group with additional disk
      - Requires a disk to be specified
      {% endif %}