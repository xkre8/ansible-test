---
- name: Get available disks safely
  ansible.builtin.shell: |
    lsblk -ndo NAME,SIZE,TYPE | grep disk | grep -v -E '(sda|nvme0n1)' | head -5 | awk '{print $1}'
  register: available_disks_result
  changed_when: false
  failed_when: false

- name: Set discovered disks list
  ansible.builtin.set_fact:
    discovered_disks: "{{ available_disks_result.stdout_lines | default([]) }}"

- name: Display discovered disks
  ansible.builtin.debug:
    msg: |
      💿 Discovered Available Disks:
      {% for disk in discovered_disks %}
      - {{ disk }}
      {% endfor %}
      {% if discovered_disks | length == 0 %}
      ⚠️ No additional disks found (excluding system disks)
      {% endif %}

- name: Auto-select first available disk if none specified
  ansible.builtin.set_fact:
    selected_disk_name: "{{ discovered_disks[0] }}"
  when:
    - selected_disk_name is not defined or selected_disk_name == ""
    - manual_lvm_device is not defined or manual_lvm_device == ""
    - discovered_disks | length > 0
    - vg_strategy | default(vg_action) in ['create_new', 'create', 'extend_existing', 'extend']

- name: Show disk selection result
  ansible.builtin.debug:
    msg: |
      🎯 Disk Selection Result:
      Method: {% if manual_lvm_device is defined and manual_lvm_device != '' %}Manual path{% elif selected_disk_name is defined and selected_disk_name != '' %}Selected disk{% else %}None (using existing VG){% endif %}
      Selected: {{ manual_lvm_device if (manual_lvm_device is defined and manual_lvm_device != '') else ('/dev/' + selected_disk_name) if (selected_disk_name is defined and selected_disk_name != '') else 'N/A' }}
      Strategy: {{ vg_strategy | default(vg_action) }}