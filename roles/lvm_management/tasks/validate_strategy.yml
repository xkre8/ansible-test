
# ==========================================
# File: tasks/validate_strategy.yml (Enhanced)
# ==========================================
---
- name: Get existing Volume Groups
  ansible.builtin.command: vgs --noheadings -o vg_name
  register: existing_vgs
  changed_when: false
  failed_when: false

- name: Get existing Physical Volumes
  ansible.builtin.command: pvs --noheadings -o pv_name,vg_name,pv_size,pv_free
  register: existing_pvs
  changed_when: false
  failed_when: false

- name: Parse existing lists
  ansible.builtin.set_fact:
    existing_vgs_list: "{{ existing_vgs.stdout_lines | map('trim') | list if existing_vgs.rc == 0 else [] }}"
    existing_pvs_list: "{{ existing_pvs.stdout_lines | map('trim') | list if existing_pvs.rc == 0 else [] }}"

- name: Display available resources
  ansible.builtin.debug:
    msg: |
      üìã Available Resources:
      
      Volume Groups:
      {% if existing_vgs_list | length > 0 %}
      {% for vg in existing_vgs_list %}
      - {{ vg }}
      {% endfor %}
      {% else %}
      No existing Volume Groups found
      {% endif %}
      
      Physical Volumes:
      {% if existing_pvs_list | length > 0 %}
      {% for pv in existing_pvs_list %}
      - {{ pv }}
      {% endfor %}
      {% else %}
      No existing Physical Volumes found
      {% endif %}

- name: Set PV strategy default when VG strategy is use_existing
  ansible.builtin.set_fact:
    pv_strategy: "not_applicable"
  when: vg_strategy == 'use_existing'

- name: Validate VG strategy requirements
  block:
    # VG Validation (existing logic)
    - name: Validate existing VG for use_existing strategy
      ansible.builtin.fail:
        msg: |
          ‚ùå Volume Group '{{ volume_group_name }}' does not exist!
          Available VGs: {{ existing_vgs_list | join(', ') }}
      when:
        - vg_strategy == 'use_existing'
        - volume_group_name not in existing_vgs_list

    - name: Validate existing VG for extend_existing strategy
      ansible.builtin.fail:
        msg: |
          ‚ùå Volume Group '{{ volume_group_name }}' does not exist!
          Cannot extend non-existing VG.
      when:
        - vg_strategy == 'extend_existing'
        - volume_group_name not in existing_vgs_list

    - name: Validate new VG name for create_new strategy
      ansible.builtin.fail:
        msg: |
          ‚ùå Volume Group '{{ volume_group_name }}' already exists!
          Choose different name or change strategy.
      when:
        - vg_strategy == 'create_new'
        - volume_group_name in existing_vgs_list

    # NEW: PV Strategy Validation
    - name: Validate PV strategy for strategies requiring disk
      block:
        - name: Validate existing PV selection
          ansible.builtin.fail:
            msg: |
              ‚ùå Physical Volume '{{ existing_pv_device }}' not found!
              
              Available PVs:
              {% for pv in existing_pvs_list %}
              - {{ pv }}
              {% endfor %}
          when:
            - pv_strategy == 'use_existing_pv'
            - existing_pv_device not in (existing_pvs_list | map('split') | map('first') | list)

        - name: Validate existing PV is not already in target VG (for extend_existing)
          ansible.builtin.command: pvs --noheadings "{{ existing_pv_device }}" -o vg_name
          register: pv_current_vg
          changed_when: false
          failed_when: false
          when: 
            - pv_strategy == 'use_existing_pv'
            - vg_strategy == 'extend_existing'

        - name: Check PV not already in VG
          ansible.builtin.fail:
            msg: |
              ‚ùå Physical Volume '{{ existing_pv_device }}' is already in Volume Group '{{ pv_current_vg.stdout.strip() }}'!
              Cannot extend VG with PV that's already a member.
          when:
            - pv_strategy == 'use_existing_pv'
            - vg_strategy == 'extend_existing'
            - pv_current_vg.stdout.strip() == volume_group_name

        - name: Validate disk specification for create_new_pv
          ansible.builtin.fail:
            msg: |
              ‚ùå Disk must be specified for 'create_new_pv' strategy!
              Please specify 'selected_disk_name' or 'manual_lvm_device'.
          when:
            - pv_strategy == 'create_new_pv'
            - (selected_disk_name is not defined or selected_disk_name == "")
            - (manual_lvm_device is not defined or manual_lvm_device == "")

      when: vg_strategy in ['create_new', 'extend_existing']