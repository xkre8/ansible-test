---
# Enhanced validation
- name: Check required variables
  ansible.builtin.fail:
    msg: "Missing required variable: {{ item }}"
  when: vars[item] is not defined or vars[item] == ""
  loop:
    - volume_group_name

- name: Validate filesystem configuration format
  ansible.builtin.fail:
    msg: "filesystem_config must be valid YAML and contain required fields (path, lv_name, size_mb)"
  when: 
    - filesystem_dirs is defined
    - filesystem_dirs | length > 0
    - item.path is not defined or item.lv_name is not defined or item.size_mb is not defined
  loop: "{{ filesystem_dirs }}"

- name: Check device is specified when needed
  ansible.builtin.fail:
    msg: |
      Device required for {{ vg_strategy }} strategy!
      Choose ONE of:
      - selected_disk_name (disk name like 'sdb')
      - manual_lvm_device (full path like '/dev/sdb1') 
      - existing_pv_device (existing PV path)
  when:
    - vg_strategy in ['create_new', 'extend_existing']
    - selected_disk_name == ""
    - manual_lvm_device == ""
    - existing_pv_device == "" or pv_strategy != 'use_existing_pv'

- name: Set target device for validation
  ansible.builtin.set_fact:
    target_device: >-
      {%- if pv_strategy == 'use_existing_pv' -%}
        {{ existing_pv_device }}
      {%- elif manual_lvm_device != '' -%}
        {{ manual_lvm_device }}
      {%- elif selected_disk_name != '' -%}
        {{ '/dev/' + selected_disk_name }}
      {%- endif -%}

- name: Validate device exists
  ansible.builtin.stat:
    path: "{{ target_device }}"
  register: device_check
  failed_when: not device_check.stat.exists
  when: 
    - target_device is defined
    - target_device != ""
    - vg_strategy in ['create_new', 'extend_existing']

- name: Check if device is already a PV (for create_new_pv strategy)
  ansible.builtin.command: pvs --noheadings "{{ target_device }}"
  register: pv_exists
  failed_when: false
  changed_when: false
  when: 
    - pv_strategy == 'create_new_pv'
    - target_device is defined
    - target_device != ""

- name: Fail if device is already a PV when creating new
  ansible.builtin.fail:
    msg: |
      Device {{ target_device }} is already a Physical Volume!
      Use pv_strategy: 'use_existing_pv' instead.
  when:
    - pv_strategy == 'create_new_pv'
    - pv_exists is defined
    - pv_exists.rc == 0

- name: Check VG exists for use_existing strategy
  ansible.builtin.command: vgs --noheadings "{{ volume_group_name }}"
  register: vg_check
  failed_when: vg_check.rc != 0
  changed_when: false
  when: vg_strategy == 'use_existing'

- name: Check VG doesn't exist for create_new strategy
  ansible.builtin.command: vgs --noheadings "{{ volume_group_name }}"
  register: vg_exists
  failed_when: vg_exists.rc == 0
  changed_when: false
  when: vg_strategy == 'create_new'

- name: Check existing PV is valid
  ansible.builtin.command: pvs --noheadings "{{ existing_pv_device }}"
  register: existing_pv_check
  failed_when: existing_pv_check.rc != 0
  changed_when: false
  when:
    - pv_strategy == 'use_existing_pv'
    - existing_pv_device != ""