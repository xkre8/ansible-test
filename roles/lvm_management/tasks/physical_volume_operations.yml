
# ==========================================
# File: tasks/physical_volume_operations.yml (NEW)
# ==========================================
---
- name: Set target device/PV based on strategy
  ansible.builtin.set_fact:
    target_pv: "{{ existing_pv_device if pv_strategy == 'use_existing_pv' else lvm_device }}"

- name: Display PV strategy selection
  ansible.builtin.debug:
    msg: |
      üîß Physical Volume Strategy: {{ pv_strategy }}
      
      {% if pv_strategy == 'use_existing_pv' %}
      üìÄ Using existing PV: {{ existing_pv_device }}
      {% elif pv_strategy == 'create_new_pv' %}
      üíø Creating new PV on: {{ lvm_device }}
      {% endif %}

# Handle create_new_pv strategy
- name: Create new Physical Volume
  block:
    - name: Validate disk exists for new PV
      ansible.builtin.stat:
        path: "{{ lvm_device }}"
      register: disk_stat

    - name: Fail if disk doesn't exist
      ansible.builtin.fail:
        msg: "‚ùå Disk {{ lvm_device }} does not exist!"
      when: not disk_stat.stat.exists

    - name: Check disk status
      ansible.builtin.shell: |
        if pvdisplay {{ lvm_device }} 2>/dev/null; then
          echo "pv_exists"
        elif lsblk -n {{ lvm_device }} | grep -q part; then  
          echo "has_partitions"
        elif lsblk -n {{ lvm_device }} | awk '{print $7}' | grep -q '/'; then
          echo "mounted"
        else
          echo "available"
        fi
      register: disk_status
      changed_when: false

    - name: Warn about existing PV
      ansible.builtin.debug:
        msg: |
          ‚ö†Ô∏è  WARNING: {{ lvm_device }} already has a Physical Volume!
          Continuing with existing PV...
      when: disk_status.stdout == 'pv_exists'

    - name: Create Physical Volume (if needed)
      community.general.lvg:
        pvs: "{{ lvm_device }}"
        state: present
      when: 
        - disk_status.stdout != 'pv_exists'
        - force_disk_usage | default(false) or disk_status.stdout == 'available'

    - name: Set target PV for new PV strategy
      ansible.builtin.set_fact:
        target_pv: "{{ lvm_device }}"

  when: pv_strategy == 'create_new_pv'

# Handle use_existing_pv strategy
- name: Validate existing Physical Volume
  block:
    - name: Check if existing PV is available
      ansible.builtin.command: pvs --noheadings "{{ existing_pv_device }}" -o vg_name
      register: existing_pv_vg
      changed_when: false
      failed_when: false

    - name: Check PV availability for create_new VG strategy
      ansible.builtin.fail:
        msg: |
          ‚ùå Physical Volume '{{ existing_pv_device }}' is already assigned to VG '{{ existing_pv_vg.stdout.strip() }}'!
          For 'create_new' VG strategy, PV must be free (unassigned).
      when:
        - vg_strategy == 'create_new'
        - existing_pv_vg.stdout.strip() != ''

    - name: Info about PV assignment for extend strategy
      ansible.builtin.debug:
        msg: |
          ‚ÑπÔ∏è  PV '{{ existing_pv_device }}' current VG: {{ existing_pv_vg.stdout.strip() if existing_pv_vg.stdout.strip() != '' else 'unassigned' }}
          Will be added to '{{ volume_group_name }}'

  when: pv_strategy == 'use_existing_pv'