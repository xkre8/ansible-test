---
# === VOLUME GROUP CREATION ===
- name: Display VG creation plan
  ansible.builtin.debug:
    msg: |
      📦 VOLUME GROUP CREATION PLAN:
      🎯 Primary VG: {{ volume_group_name }} on {{ primary_device }}
         ✅ Will create: {{ create_primary_vg | default(true) }}
      {% if split_disk %}
      🎯 Secondary VG: {{ volume_group2_name }} on {{ secondary_device }}
         ✅ Will create: {{ create_secondary_vg | default(true) }}
      {% endif %}

# === CREATE PRIMARY VG ===
- name: Create primary volume group
  community.general.lvg:
    vg: "{{ volume_group_name }}"
    pvs: "{{ primary_device }}"
    state: present
  register: primary_vg_result
  when: create_primary_vg | default(true)

- name: Get primary VG information
  ansible.builtin.command: vgs {{ volume_group_name }} --units m --noheadings -o vg_size,vg_free --nosuffix
  register: primary_vg_info
  changed_when: false
  when: create_primary_vg | default(true)

# === CREATE SECONDARY VG (if split_disk) - Fixed ===
- name: Create secondary volume group
  community.general.lvg:
    vg: "{{ volume_group2_name }}"
    pvs: "{{ secondary_device }}"
    state: present
  register: secondary_vg_result
  when: 
    - split_disk
    - secondary_device != ""
    - volume_group2_name != ""
    - (not split_disk_secondary) or (split_disk_secondary and total_fs2_size_mb | int <= ((remaining_disk_gb | int * 1024 * 0.95) | int))

- name: Get secondary VG information
  ansible.builtin.command: vgs {{ volume_group2_name }} --units m --noheadings -o vg_size,vg_free --nosuffix
  register: secondary_vg_info
  changed_when: false
  failed_when: false
  when: 
    - split_disk
    - secondary_device != ""
    - volume_group2_name != ""
    - (not split_disk_secondary) or (split_disk_secondary and total_fs2_size_mb | int <= ((remaining_disk_gb | int * 1024 * 0.95) | int))

# === DISPLAY VG CREATION RESULTS ===
- name: Display VG creation results
  ansible.builtin.debug:
    msg: |
      ✅ VOLUME GROUP CREATION COMPLETE:
      
      {% if create_primary_vg | default(true) %}
      📦 Primary VG: {{ volume_group_name }}
         Size: {{ primary_vg_info.stdout.split()[0] if primary_vg_info is defined }}MB
         Free: {{ primary_vg_info.stdout.split()[1] if primary_vg_info is defined }}MB
         Device: {{ primary_device }}
      {% else %}
      ❌ Primary VG: {{ volume_group_name }} - SKIPPED (insufficient space for required filesystems)
      {% endif %}
      
      {% if split_disk %}
        {% if create_secondary_vg | default(true) %}
      📦 Secondary VG: {{ volume_group2_name }}
         Size: {{ secondary_vg_info.stdout.split()[0] if secondary_vg_info is defined }}MB
         Free: {{ secondary_vg_info.stdout.split()[1] if secondary_vg_info is defined }}MB
         Device: {{ secondary_device }}
         Purpose: {{ 'Filesystems + VG' if split_disk_secondary else 'VG Only (future use)' }}
        {% else %}
      ❌ Secondary VG: {{ volume_group2_name }} - SKIPPED (insufficient space for required filesystems)
        {% endif %}
      {% endif %}