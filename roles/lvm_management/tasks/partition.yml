---
# === PARTITION MANAGEMENT ===
- name: Get disk information
  ansible.builtin.shell: |
    echo "=== DISK INFO FOR {{ base_disk }} ==="
    fdisk -l "{{ base_disk }}" 2>/dev/null | head -5 || echo "Disk not found"
    echo ""
    echo "=== CURRENT PARTITIONS ==="
    lsblk "{{ base_disk }}" 2>/dev/null || echo "No partitions"
  register: disk_info
  changed_when: false
  when: 
    - partition_strategy == 'create_partition'
    - base_disk is defined

- name: Display disk information
  ansible.builtin.debug:
    msg: |
      {{ disk_info.stdout }}
      Will create {{ partition_size_gb }}GB partition on {{ base_disk }}
  when: 
    - partition_strategy == 'create_partition'
    - disk_info is defined
    - disk_info.stdout is defined

- name: Check if partition already exists
  ansible.builtin.shell: |
    lsblk "{{ base_disk }}" -o NAME,SIZE,TYPE | grep part | head -1 || echo "no_partition"
  register: existing_partition_check
  changed_when: false
  when: partition_strategy == 'create_partition'

- name: Create partition using parted
  ansible.builtin.shell: |
    echo "DEBUG: Creating partition on {{ base_disk }}"
    echo "DEBUG: Partition size: {{ partition_size_gb }}GB"
    
    # Check if partition table exists
    if ! parted "{{ base_disk }}" print >/dev/null 2>&1; then
      echo "Creating GPT partition table on {{ base_disk }}..."
      parted "{{ base_disk }}" mklabel gpt
    else
      echo "Partition table already exists on {{ base_disk }}"
    fi
    
    # Create partition
    echo "Creating {{ partition_size_gb }}GB partition on {{ base_disk }}..."
    parted "{{ base_disk }}" mkpart primary 0% {{ partition_size_gb }}GB
    
    # Wait and refresh
    sleep 3
    partprobe "{{ base_disk }}" 2>/dev/null || true
    
    # Verify partition was created
    echo "=== VERIFICATION ==="
    lsblk "{{ base_disk }}"
    
    # Get the new partition name
    new_partition=$(lsblk "{{ base_disk }}" -o NAME -n | grep -v "$(basename {{ base_disk }})" | head -1 | tr -d '├─└│ ')
    if [ -n "$new_partition" ]; then
      echo "SUCCESS: Created partition /dev/${new_partition}"
    else
      echo "ERROR: Failed to create partition!"
      exit 1
    fi
  register: partition_creation
  when: 
    - partition_strategy == 'create_partition'
    - existing_partition_check is defined
    - existing_partition_check.stdout == 'no_partition'

- name: Get created partition device
  ansible.builtin.shell: |
    new_partition=$(lsblk "{{ base_disk }}" -o NAME -n | grep -v "$(basename {{ base_disk }})" | head -1 | tr -d '├─└│ ')
    if [ -n "$new_partition" ]; then
      echo "/dev/${new_partition}"
    else
      echo "{{ base_disk }}"  # fallback to whole disk
    fi
  register: created_partition
  changed_when: false
  when: 
    - partition_strategy == 'create_partition'

- name: Set partition as target device
  ansible.builtin.set_fact:
    target_device: "{{ created_partition.stdout if (partition_strategy == 'create_partition' and created_partition is defined and created_partition.stdout is defined) else base_disk }}"
  when: 
    - base_disk is defined
    - base_disk != ""

- name: Display partition result
  ansible.builtin.debug:
    msg: |
      Partition Strategy: {{ partition_strategy }}
      Base disk: {{ base_disk | default('undefined') }}
      Target device: {{ target_device | default('undefined') }}
      {% if partition_strategy == 'create_partition' %}
      Partition size: {{ partition_size_gb }}GB
      
      {% if partition_creation is defined and partition_creation.stdout is defined %}
      Partition creation output:
      {{ partition_creation.stdout }}
      {% elif partition_creation is defined and partition_creation.skipped is defined %}
      Partition creation: SKIPPED ({{ partition_creation.skip_reason | default('condition not met') }})
      {% else %}
      Partition creation: NOT EXECUTED
      {% endif %}
      
      {% if created_partition is defined and created_partition.stdout is defined %}
      Detected partition: {{ created_partition.stdout }}
      {% else %}
      Partition detection: FAILED - using whole disk fallback
      {% endif %}
      {% else %}
      Strategy: Using whole disk (no partition creation)
      {% endif %}