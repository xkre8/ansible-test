---
- name: Handle VG operations based on action
  block:
    - name: Create new Volume Group
      community.general.lvg:
        vg: "{{ volume_group_name }}"
        pvs: "{{ lvm_device }}"
        state: present
      when: vg_action in ['create', 'extend']
      register: vg_creation_result

    - name: Display VG operation result
      ansible.builtin.debug:
        msg: |
          {% if vg_action == 'create' %}
          ✅ Volume Group '{{ volume_group_name }}' created successfully
          {% elif vg_action == 'extend' %}
          ✅ Volume Group '{{ volume_group_name }}' extended with {{ lvm_device }}
          {% else %}
          📦 Using existing Volume Group '{{ volume_group_name }}'
          {% endif %}

- name: Get Volume Group space information
  ansible.builtin.command: vgs --noheadings --units m "{{ volume_group_name }}" -o vg_free
  register: vg_free_space
  changed_when: false

- name: Calculate total space requirements
  ansible.builtin.set_fact:
    total_required_mb: "{{ filesystem_dirs | selectattr('create_lvm', 'equalto', true) | map(attribute='size_mb') | map('int') | sum }}"
    available_mb: "{{ vg_free_space.stdout.strip() | regex_replace('m', '') | int }}"

- name: Display space information
  ansible.builtin.debug:
    msg: |
      💾 Volume Group Space Analysis:
      - VG Name: {{ volume_group_name }}
      - Available Space: {{ available_mb }}MB
      - Required Space: {{ total_required_mb }}MB
      - Action: {{ vg_action }}
      {% if (total_required_mb | int) <= (available_mb | int) %}
      ✅ Sufficient space available
      {% else %}
      ❌ Insufficient space - need {{ (total_required_mb | int) - (available_mb | int) }}MB more
      {% endif %}

- name: Validate sufficient space exists
  ansible.builtin.fail:
    msg: |
      ❌ Insufficient space in Volume Group {{ volume_group_name }}!
      
      Space Analysis:
      - Available: {{ available_mb }}MB
      - Required: {{ total_required_mb }}MB  
      - Shortfall: {{ (total_required_mb | int) - (available_mb | int) }}MB
      
      Solutions:
      1. Reduce filesystem sizes in configuration
      2. Add more disks to extend VG
      3. Choose a different VG with more space
  when: (total_required_mb | int) > (available_mb | int)

- name: Create Logical Volumes
  community.general.lvol:
    vg: "{{ volume_group_name }}"
    lv: "{{ item.lv_name }}"
    size: "{{ item.size_mb }}m"
    state: present
  loop: "{{ filesystem_dirs | selectattr('create_lvm', 'equalto', true) }}"
  register: lv_creation_results

- name: Display LV creation summary
  ansible.builtin.debug:
    msg: |
      📀 Logical Volumes Created:
      {% for result in lv_creation_results.results %}
      {% if result.changed %}
      - ✅ {{ result.item.lv_name }}: {{ result.item.size_mb }}MB (NEW)
      {% else %}
      - 📋 {{ result.item.lv_name }}: {{ result.item.size_mb }}MB (EXISTS)
      {% endif %}
      {% endfor %}