---
- name: Parse filesystem configuration
  ansible.builtin.set_fact:
    parsed_filesystems: "{{ filesystem_config | from_yaml }}"

- name: Build complete filesystem configuration
  ansible.builtin.set_fact:
    filesystem_dirs: |
      [
        {% for fs in parsed_filesystems %}
        {
          "path": "{{ fs.path }}",
          "lv_name": "{{ fs.lv_name }}",
          "owner": "{{ fs.owner | default('root') }}",
          "group": "{{ fs.group | default('root') }}",
          "mode": "{{ fs.mode | default('0755') }}",
          "create_lvm": {{ fs.create_lvm | default(true) | lower }},
          "size_mb": {{ fs.size_mb }},
          "fstype": "{{ fs.fstype | default('xfs') }}",
          "mount_opts": "{{ fs.mount_opts | default('defaults') }}"
        }{% if not loop.last %},{% endif %}
        {% endfor %}
      ]
      
- name: Install LVM packages
  ansible.builtin.package:
    name: lvm2
    state: present

- name: Check if Physical Volume exists
  ansible.builtin.shell: pvs {{ lvm_device }} --noheadings
  register: pv_check
  failed_when: false
  changed_when: false

- name: Create Physical Volume
  ansible.builtin.shell: pvcreate {{ lvm_device }}
  when: pv_check.rc != 0

- name: Check if Volume Group exists
  ansible.builtin.shell: vgs {{ volume_group_name }} --noheadings
  register: vg_check
  failed_when: false
  changed_when: false

- name: Create Volume Group
  ansible.builtin.shell: vgcreate {{ volume_group_name }} {{ lvm_device }}
  when: vg_check.rc != 0

- name: Check existing Logical Volumes
  ansible.builtin.shell: lvs --noheadings {{ volume_group_name }}/{{ item.lv_name }}
  register: lv_check
  failed_when: false
  changed_when: false
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

- name: Create Logical Volumes
  ansible.builtin.shell: lvcreate -L {{ item.item.size_mb }}M -n {{ item.item.lv_name }} {{ volume_group_name }}
  when: 
    - item.item.create_lvm | default(false)
    - item.rc != 0
  loop: "{{ lv_check.results }}"

# - name: Create filesystems on Logical Volumes
#   ansible.builtin.filesystem:
#     fstype: "{{ item.fstype | default('xfs') }}"
#     dev: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
#     force: no
#   loop: "{{ filesystem_dirs }}"
#   when: item.create_lvm | default(false)

- name: Create filesystems on Logical Volumes
  community.general.filesystem:
    fstype: "{{ item.fstype | default('xfs') }}"
    dev: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
    force: no
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

- name: Create filesystem directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
  loop: "{{ filesystem_dirs }}"

- name: Mount LVM filesystems
  ansible.builtin.mount:
    path: "{{ item.path }}"
    src: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
    fstype: "{{ item.fstype | default('xfs') }}"
    opts: "{{ item.mount_opts | default('defaults') }}"
    state: mounted
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

- name: Add to /etc/fstab for persistent mounting
  ansible.builtin.mount:
    path: "{{ item.path }}"
    src: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
    fstype: "{{ item.fstype | default('xfs') }}"
    opts: "{{ item.mount_opts | default('defaults') }}"
    state: present
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)