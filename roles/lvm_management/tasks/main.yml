# ---
# - name: Install LVM packages
#   ansible.builtin.package:
#     name: lvm2
#     state: present

# - name: Create Physical Volume
#   community.general.lvg:
#     vg: "{{ volume_group_name }}"
#     pvs: "{{ lvm_device }}"
#     state: present

# - name: Create Logical Volumes
#   community.general.lvol:
#     vg: "{{ volume_group_name }}"
#     lv: "{{ item.lv_name | default(item.path | basename) }}"
#     size: "{{ item.size_mb }}m"
#     state: present
#   loop: "{{ filesystem_dirs }}"
#   when: item.create_lvm | default(false)

# - name: Create filesystems
#   community.general.filesystem:
#     fstype: "{{ item.fstype | default('xfs') }}"
#     dev: "/dev/{{ volume_group_name }}/{{ item.lv_name | default(item.path | basename) }}"
#     state: present
#   loop: "{{ filesystem_dirs }}"
#   when: item.create_lvm | default(false)

# - name: Create mount directories
#   ansible.builtin.file:
#     path: "{{ item.path }}"
#     state: directory
#     owner: "{{ item.owner | default('root') }}"
#     group: "{{ item.group | default('root') }}"
#     mode: "{{ item.mode | default('0755') }}"
#   loop: "{{ filesystem_dirs }}"

# - name: Mount filesystems
#   ansible.posix.mount:
#     path: "{{ item.path }}"
#     src: "/dev/{{ volume_group_name }}/{{ item.lv_name | default(item.path | basename) }}"
#     fstype: "{{ item.fstype | default('xfs') }}"
#     opts: "{{ item.mount_opts | default('defaults') }}"
#     state: mounted
#   loop: "{{ filesystem_dirs }}"
#   when: item.create_lvm | default(false)

# - name: Add to /etc/fstab
#   ansible.posix.mount:
#     path: "{{ item.path }}"
#     src: "/dev/{{ volume_group_name }}/{{ item.lv_name | default(item.path | basename) }}"
#     fstype: "{{ item.fstype | default('xfs') }}"
#     opts: "{{ item.mount_opts | default('defaults') }}"
#     state: present
#   loop: "{{ filesystem_dirs }}"
#   when: item.create_lvm | default(false)

---
# Parse survey input (add these tasks first)
- name: Parse filesystem configuration
  ansible.builtin.set_fact:
    parsed_filesystems: "{{ filesystem_config | from_yaml }}"
  when: filesystem_config is defined

- name: Build complete filesystem configuration
  ansible.builtin.set_fact:
    filesystem_dirs: |
      [
        {% for fs in parsed_filesystems %}
        {
          "path": "{{ fs.path }}",
          "lv_name": "{{ fs.lv_name }}",
          "owner": "{{ fs.owner | default('root') }}",
          "group": "{{ fs.group | default('root') }}",
          "mode": "{{ fs.mode | default('0755') }}",
          "create_lvm": {{ fs.create_lvm | default(true) | lower }},
          "size_mb": {{ fs.size_mb }},
          "fstype": "{{ fs.fstype | default('xfs') }}",
          "mount_opts": "{{ fs.mount_opts | default('defaults') }}"
        }{% if not loop.last %},{% endif %}
        {% endfor %}
      ]
  when: filesystem_config is defined

# Install required packages
- name: Install LVM packages
  ansible.builtin.package:
    name: lvm2
    state: present

# Create Volume Group with Physical Volume
- name: Create Volume Group and Physical Volume
  community.general.lvg:
    vg: "{{ volume_group_name }}"
    pvs: "{{ lvm_device }}"
    state: present
  when: lvm_device is defined and lvm_device != ""

# Create Logical Volumes
- name: Create Logical Volumes
  community.general.lvol:
    vg: "{{ volume_group_name }}"
    lv: "{{ item.lv_name }}"
    size: "{{ item.size_mb }}m"
    state: present
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

# Create filesystems
- name: Create filesystems on Logical Volumes
  community.general.filesystem:
    fstype: "{{ item.fstype | default('xfs') }}"
    dev: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
    force: no
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

# Create mount directories
- name: Create mount directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
  loop: "{{ filesystem_dirs }}"

# Mount filesystems temporarily
- name: Mount filesystems
  ansible.posix.mount:
    path: "{{ item.path }}"
    src: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
    fstype: "{{ item.fstype | default('xfs') }}"
    opts: "{{ item.mount_opts | default('defaults') }}"
    state: mounted
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

# Add to fstab for persistent mounting
- name: Add filesystems to /etc/fstab
  ansible.posix.mount:
    path: "{{ item.path }}"
    src: "/dev/{{ volume_group_name }}/{{ item.lv_name }}"
    fstype: "{{ item.fstype | default('xfs') }}"
    opts: "{{ item.mount_opts | default('defaults') }}"
    state: present
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)

# Verify mounted filesystems
- name: Display mounted filesystems
  ansible.builtin.debug:
    msg: "{{ item.lv_name }} mounted at {{ item.path }} ({{ item.size_mb }}MB)"
  loop: "{{ filesystem_dirs }}"
  when: item.create_lvm | default(false)